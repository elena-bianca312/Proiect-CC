version: "3"
services:
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: password123
      POSTGRES_USER: user123
      POSTGRES_DB: db123
    networks:
      - backend-network
  db-auth:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: password123
      POSTGRES_USER: user123
      POSTGRES_DB: db123
    networks:
      - auth-network
  backend:
    image: santa-letters-backend
    ports:
      - 16000:6000
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: user123
      DB_PASSWORD: password123
      DB_NAME: db123
    networks:
      - backend-network
      - backend-auth-network
      - frontend-network
  auth:
    image: santa-letters-auth
    ports:
      - 14000:4000
    environment:
      DB_HOST: db-auth
      DB_PORT: 5432
      DB_USER: user123
      DB_PASSWORD: password123
      DB_NAME: db123
    networks:
      - auth-network
      - backend-auth-network
      - frontend-network
    depends_on:
      - db-auth
  frontend:
    image: santa-letters-frontend
    ports:
      - "13000:3000"
    depends_on:
      - backend
      - auth
    networks:
      - frontend-network
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"  # Adminer will be accessible at http://localhost:8080
    depends_on:
      - db
      - db-auth
    networks:
      - backend-network
      - auth-network
  portainer:
    image: portainer/portainer-ce
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - backend-network
      - auth-network
      - backend-auth-network
      - frontend-network
volumes:
  portainer_data:
networks:
  backend-network:
  auth-network:
  backend-auth-network:
  frontend-network: